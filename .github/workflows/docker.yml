name: "Workflow for Docker"

on:
  workflow_run:
    workflows: ["Workflow for Terraform configuration"]
    types: 
      - completed

env:
  AWS_REGION: "eu-north-1"
  IMAGE_TAG: 1.0.0

jobs:
  build-push:
    name: Build Push Docker Image
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
        id-token: write
        contents: read
   
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS Credentials Development
      if: github.ref != 'refs/heads/main'
      uses: aws-actions/configure-aws-credentials@v2
      with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::226165991761:role/github-actions
          role-session-name: GithubActionsSession

    - name: Configure AWS Credentials Production
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: aws-actions/configure-aws-credentials@v2
      with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::480162773870:role/github-actions
          role-session-name: GithubActionsSession

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ecs-healthcheck
        DOCKERFILE_DIR: build
        IMAGE_TAG: ${{ env.IMAGE_TAG }} #GITHUB_RUN_ID #GITHUB_SHA
      run: |
        docker buildx create --use
        docker buildx build --platform linux/amd64,linux/arm/v7,linux/arm64 --push -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f $DOCKERFILE_DIR/Dockerfile .